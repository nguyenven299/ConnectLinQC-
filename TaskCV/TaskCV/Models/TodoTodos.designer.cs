#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskCV.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DatabaseTest")]
	public partial class TodoTodosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTodoTodo(TodoTodo instance);
    partial void UpdateTodoTodo(TodoTodo instance);
    partial void DeleteTodoTodo(TodoTodo instance);
    #endregion
		
		public TodoTodosDataContext() : 
				base(global::TaskCV.Properties.Settings.Default.DatabaseTestConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public TodoTodosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TodoTodosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TodoTodosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TodoTodosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TodoTodo> TodoTodos
		{
			get
			{
				return this.GetTable<TodoTodo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TodoTodos")]
	public partial class TodoTodo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdToDo;
		
		private string _NameTodo;
		
		private System.Nullable<bool> _Completed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdToDoChanging(int value);
    partial void OnIdToDoChanged();
    partial void OnNameTodoChanging(string value);
    partial void OnNameTodoChanged();
    partial void OnCompletedChanging(System.Nullable<bool> value);
    partial void OnCompletedChanged();
    #endregion
		
		public TodoTodo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdToDo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdToDo
		{
			get
			{
				return this._IdToDo;
			}
			set
			{
				if ((this._IdToDo != value))
				{
					this.OnIdToDoChanging(value);
					this.SendPropertyChanging();
					this._IdToDo = value;
					this.SendPropertyChanged("IdToDo");
					this.OnIdToDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTodo", DbType="NVarChar(225)")]
		public string NameTodo
		{
			get
			{
				return this._NameTodo;
			}
			set
			{
				if ((this._NameTodo != value))
				{
					this.OnNameTodoChanging(value);
					this.SendPropertyChanging();
					this._NameTodo = value;
					this.SendPropertyChanged("NameTodo");
					this.OnNameTodoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Bit")]
		public System.Nullable<bool> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
